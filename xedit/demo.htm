<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8"/>
	<title>XEdit Demo Page</title>
	<link rel="stylesheet" type="text/css" href="xedit.css"/>
	<script type="text/javascript" src="../coollab/lib/jquery-1.11.0.min.js"></script>
	<script type="text/javascript" src="../coollab/lib/html.js"></script>
	<script type="text/javascript" src="xedit.js"></script>
	<script type="text/javascript">
		var docSpec = {
			validate: function(root){
				if(root.children.length<3) XEdit.warnings.push({
					htmlID: root.htmlID,
					text:"en:Too few books! | ru:Слишком мало книг! "
				});
				for(var i=0,el; el=root.children[i],i<root.children.length; i++){
					var elementSpec=docSpec.elements[el.name];
					if(el.type=='element') elementSpec.validate(el);
				}
			},
			onchange: function(){
				console.log("I been changed now!")
			},
			elements: {
				"library": {
					displayName: "en: library | ru: библиотека",
					menu: [{
						caption: "ru: Добавить книгу | en: Add new <book>",
						action: XEdit.newElementChild,
						actionParameter: "<book/>"
					}]
				},
				"book": {
					displayName: "en: book | ru: книга",
					menu: [
						{
							caption: "Добавить заголовок @title=\"***\"",
							action: XEdit.newAttribute,
							actionParameter: {name: "title", value: "***"},
							hideIf: function(jsElement){
								return jsElement.hasAttribute("title");
							}
						},
						{
							caption: "Добавить аннотацию <annotation>",
							action: XEdit.newElementChild,
							actionParameter: "<annotation>***</annotation>",
							hideIf: function(jsElement){
								return jsElement.hasChildElement("annotation");
							}
						},
						{
							caption: "Добавить жанр @genre=\"\"",
							action: XEdit.newAttribute,
							actionParameter: {name: "genre", value: ""},
							hideIf: function(jsElement){
								return jsElement.hasAttribute("genre");
							}
						},
						{
							caption: "Удалить эту книгу <book>",
							action: XEdit.deleteElement
						}, 
						{
							caption: "Вставить книгу <book> перед этой",
							action: XEdit.newElementBefore,
							actionParameter: "<book/>"
						},
						{
							caption: "Вставить книгу <book> после этой",
							action: XEdit.newElementAfter,
							actionParameter: "<book/>"
						}
					],
					canDropTo: ["library"],
					attributes: {
						"title": {
							asker: XEdit.askString,
							menu: [{
								caption: "Удалить этот заголовок @title",
								action: XEdit.deleteAttribute
							}]
						},
						genre:{
							asker: XEdit.askPicklist,
							askerParameter: [
								{value: "novel", caption: "роман"},
								{value: "story", caption: "повесть"}
							]
						}
					},
					validate:function(el){
						if(!el.hasAttribute("title")) XEdit.warnings.push({
							htmlID: el.htmlID,
							text:"en:Missing title! | ru:Отсутствует заголовок! "
						});
					}
				},
				annotation:{
					// hasText:true,
					// oneliner: true,
					menu: [
						{
							caption: "Удалить эту аннотацию <annotation>",
							action: XEdit.deleteElement
						},
						{
							caption: "Добавить абзац <p>",
							action: XEdit.newElementChild,
							actionParameter: "<p>***</p>"
						}
					],
					canDropTo: ["book"],
					collapsed: function(el){return !el.hasChildElement("p");}
				},
				p:{
					displayName: "en:p | ru:абзац",
					hasText:true,
					menu: [
						{
							caption: "Удалить этот абзац <p>",
							action: XEdit.deleteElement
						}, 
						{
							caption: "Вставить абзац <p> перед этим",
							action: XEdit.newElementBefore,
							actionParameter: "<p/>"
						},
						{
							caption: "Вставить абзац <p> после этого",
							action: XEdit.newElementAfter,
							actionParameter: "<p/>"
						}
					],
					inlineMenu: [{
						caption: "en:Wrap with <sel> | ru:Выделить",
						action: XEdit.wrap,
						actionParameter: {template: "<sel>$</sel>", placeholder: "$"}
					}],
					canDropTo: ["annotation"],
					asker: XEdit.askLongString,
					collapsed: true
				},
				sel:{
					displayName: "en:sel | ru:выделение",
					hasText:true,
					canDropTo: ["p"],
					asker: XEdit.askString,
					menu: [
						{
							caption: "en: Remove this selection | ru:Удалить это выделение",
							action: XEdit.deleteElement
						}
					]
				}
			}
		};
		
		function defineXmlTags(tags){tags = tags.split(";");
			function defTag(nm){return function(){return Html.tag(nm, arguments, true);}}
			var res = {}
			for(var i=0,t; t=tags[i],i<tags.length; i++) res[t] = defTag(t);
			return res;
		}
		
		var xml = (function(){with(defineXmlTags("library;book;annotation;p;sel")){
			return library(
				book({title:"Война и мир"}),
				book({title:"Капитанская дочка"},
					annotation(
						p("Исторический роман (или повесть) ", sel("А. С. Пушкина"), ", действие которого происходит во время восстания Емельяна Пугачёва."),
						p("Впервые опубликован без указания имени автора в 4-й книжке журнала «Современник», поступившей в продажу в последней декаде 1836 года.")
					)
				)
			);
		}})();
		
		//console.log(xml);
		
		function start(){
			XEdit.lang = $(".selLang").val();
			$(".selLang").change(setLang);
			
			XEdit.setMode($(".selMode").val());
			$(".selMode").change(function(){
				XEdit.setMode($(this).val());
			});
			XEdit.render(xml, $("#editor")[0], docSpec);
			
			$(".cbPreserve").change(function(){
				var on = $(this)[0].checked;
				XEdit.settings({insertPreserveSpace:on});
			});
		}
		function submit(){
			console.log(XEdit.harvest());
		}
		
		function setLang(){
			XEdit.lang = $(".selLang").val();
			XEdit.render(XEdit.harvest(), $("#editor")[0], docSpec);
		}

		$(start);
	</script>
</head>
<body>
	<h1>XEdit Demo Page</h1>
	<div>
		<input type="button" onclick="submit()" value="Harvest"/>
		
		Mode:  
		<select class="selMode">
			<option value="nerd" selected="true">Nerd</option>
			<option value="laic">Laic</option>
		</select>
		
		Language:  
		<select class="selLang">
			<option value="en" selected="true">EN</option>
			<option value="ru">RU</option>
		</select>
		
		Preserve space: <input type="checkbox" class="cbPreserve"/>
		
	</div>
	<div id="editor"></div>
</body>
</html>
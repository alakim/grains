$.fn.solarSystem = function(options){	var opt = {		margin: 10	};	$.extend(true, opt, options);		var today = new Date();		/* 	idx - порядковый номер объекта		d - диаметр объекта для отображения(px)		siderT - сидерический год (в земных сутках)		ra - радиус орбиты в афелии (а.е.)		opposition - дата ближайшего противостояния (верхнего соединения для нижних планет)	*/	var objects = {		Sun:{idx:0, color:"#ffc", d:10},		Mercury:{idx:1, color:"#fff", d:3, siderT:87.97, ra:0.47, opposition:new Date(2012,10,16)},		Venus:{idx:2, color:"#eef", d:5, siderT:224.70, ra:0.73, opposition:new Date(2012,5,4)},		Earth:{idx:3, color:"#ccf", d:5, siderT:365.26, ra:1.02},		Mars:{idx:4, color:"#fcc", d:4, siderT:686.98, ra:1.67, opposition:new Date(2012,2,3)},		Jupiter:{idx:5, color:"#fee", d:8, siderT:4332.59, ra:5.46, opposition:new Date(2012,11,3)},		Saturn:{idx:6, color:"#ccc", d:7, siderT:10759.22, ra:10.12, opposition:new Date(2012,3,15)},		Uranus:{idx:7, color:"#ccc", d:6, siderT:30799.1, ra:20.08, opposition:new Date(2012,8,29)},		Neptune:{idx:8, color:"#ccf", d:6, siderT:60190, ra:30.44, opposition:new Date(2012,7,24)}		//Pluto:{idx:9, color:"#ccc", d:3, siderT:90613.31, ra:39.48}	};	$.extend(true, objects, opt.objects);		var orbitCount = -1;	for(var k in objects) orbitCount++;		function daysInterval(date1, date2){		return (date2-date1)/(1000*60*60*24);	}		function dayOfYear(date){		var newYr = new Date(1900+date.getYear(), 0, 1)		return daysInterval(newYr, date);	}		function earthPhase(date){		date = date || today;		return dayOfYear(date)*-360/objects.Earth.siderT;	}		function phase(planetName){		if(planetName=="Sun") return 0;		var planet = objects[planetName];		if(planetName=="Earth") return earthPhase();		var oppDays = daysInterval(planet.opposition, today);		var dPh = oppDays*-360/planet.siderT;		return dPh + earthPhase(planet.opposition);	}			function Planet(P, nm){		var orbitStep = (Math.min(opt.h, opt.w)/2 - opt.margin)/orbitCount;		var orbitR = orbitStep*objects[nm].idx;		P.circle(opt.w/2, opt.h/2, orbitR).attr({"stroke-width":1, stroke:opt.color.fore, opacity:.7});		return P.circle(opt.w/2, opt.h/2 - orbitR, objects[nm].d)			.attr({fill:objects[nm].color, "stroke-width":0, title:nm})			.transform(["R", phase(nm), opt.w/2, opt.h/2]);	}		function buildScreen(pnl){		var P = new Raphael(pnl, opt.w, opt.h);		P.rect(0, 0, opt.w, opt.h)			.attr({fill:opt.color.back});					for(var k in objects){			Planet(P, k);		}	}		$.each(this, function(i, itm){		buildScreen(itm);	});};
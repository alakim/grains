<html>
<head>
<title>JFx Unit Tests</title>
<script type="text/javascript" src="../tools/jsUnit.js"></script>
<script type="text/javascript" src="jfx.js"></script>
<script type="text/javascript">
new JSUnit.Test("Подключение модуля JFx", "Configuration").run = function(){
	this.assert(typeof(JFx), "object");
}

function BuildSampleDoc(){with(JFx){
	with(
		Schema(
			Item("Persons"),
			Item("Person", Attr("fio", 0)),
			Item("Description")
		)
	){
		return Persons(
			Person("Иванов", ID("iiivanov"), Description("iiivanov@mail.ru")),
			Person("Петров", Description("pppetrov@mail.ru"), {phone:"444-4444", address:"ул.3-я Строителей, д.111, кв.2223."}),
			Person("Сидоров", Description("sssidorov@mail.ru"))
		);
	}
}}

new JSUnit.Test("Формирование простого документа", "Building Document").run = function(){
	var persons = BuildSampleDoc();
	
	this.assert(persons.length, 3, "Persons length error.");
	this.assert(persons[0].length, 1);
	
	this.assert(persons[0].fio, "Иванов");
	this.assert(persons[0]._.type, "Person");
	this.assert(persons[0]._.id, "iiivanov");
	
	this.assert(persons[1].fio, "Петров");
	this.assert(persons[1]._.id, null);
	this.assert(persons[1].phone, "444-4444");
	this.assert(persons[1].address, "ул.3-я Строителей, д.111, кв.2223.");
	
	this.assert(persons[0]._.parent._.type, "Persons");
	
	this.assert(persons._.$jxml(), ["Persons", [
		["Person", {fio:"Иванов", id:"iiivanov"},[
			["Description", ["iiivanov@mail.ru"]]
		]],
		["Person", {fio:"Петров", phone:"444-4444", address:"ул.3-я Строителей, д.111, кв.2223."},[
			["Description", ["pppetrov@mail.ru"]]
		]],
		["Person", {fio:"Сидоров"},[
			["Description", ["sssidorov@mail.ru"]]
		]]
	]]);
	
}

new JSUnit.Test("Поиск по ID", "Building Document").run = function(){
	var persons = BuildSampleDoc();
	
	var iiivanov = persons._.getByID("iiivanov");
	this.assert(iiivanov.fio, "Иванов");
}

new JSUnit.Test("Доступ к коллекции атрибутов", "Building Document").run = function(){
	var persons = BuildSampleDoc();
	
	var attrs = persons[1]._.$attributes();
	this.assert(attrs.fio, "Петров");
	this.assert(attrs.phone!=null, true);
	this.assert(attrs.address!=null, true);
	this.assert(JFx.count(attrs), 3);
}

new JSUnit.Test("Простой запрос", "Queries").run = function(){
	var persons = BuildSampleDoc();
	
	var path = [
		"/",
		"Person",
		"Description"
	];
	
	var items = persons._.select(path);
	this.assert(items.length, 3);
	this.assert(items[0]._.type, "Description");
	this.assert(items[1]._.type, "Description");
	this.assert(items[2]._.type, "Description");
	
	this.assert(items[0][0], "iiivanov@mail.ru");
}

function init(){
	document.getElementById("versionPanel").innerHTML = JFx.version;
	JSUnit.init();
}
</script>
</head>
<body onload="init()">
	<h1>JFx Unit Tests</h1>
	<p>JFx v.<span id="versionPanel"></span></p>
	<div id="testContainer" style="display:none;"></div>
	<div id="out"></div>
</body>
</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251"/>
<link rel="stylesheet" type="text/css" href="tools/styles.css"/>
<script type="text/javascript" src="tools/html.js"></script>
<script type="text/javascript" src="tools/decisions.js"></script>
<script type="text/javascript">
with(Decisions.Language){
Reasoning("Решения по проекту JFx",
	Problem("Общая концепция представления данных",
		Description(
			p("Требуется выбрать способ представления структур данных, подобных XML-документам (т.е. в них имеется разделение на атрибуты и вложенные элементы)."),
			p("Синтаксис должен быть максимально понятен и лаконичен.")
		),
		Solution("Функциональный стиль",
			Description(
				p("Древовидная структура документа формируется в виде стека вызовов функций (функций-конструкторов), каждая из которых формирует отдельный элемент документа. При этом имя функции означает тип элемента (аналог имени тега в XML)."),
				p("Аргументами функции-конструктора являются вызовы функций-конструкторов вложенных элементов, а также структуры данных (javascript-объекты), содержащие значения необязательных атрибутов элемента."),
				p("В целях сокращения объема кода, и повышения его читаемости, значения обязательных атрибутов элемента могут передаваться в первых позициях списка аргументов. Соответствие этих позиций именам атрибутов должно быть определено при описании схемы данных.")
			)
		)
	),
	Problem("Выбор названия проекта",
		Solution("JFx",
			Description("J - javascript, Fx - указывает на функциональный стиль описания данных.")
		)
	),
	Problem("Валидация документа",
		Problem("Определить момент запуска валидации",
			Description(
				p("Функции, формирующие элементы документа не знают, является ли данный элемент корневым, соответственно, могут по окончании формирования элемента запустить лишь его валидацию в отдельности, но не валидацию документа в целом"),
				p("Валидация документа в целом совершенно необходима. Например, это может быть проверка уникальности идентификаторов внутри документа, или проверка целостности по ссылкам."),
				p("Кроме того, построение индексов элементов имеет смысл начинать уже после того, как документ будет сформирован полностью.")
			),
			Solution("Обозначать в схеме корневой элемент",
				Description(
					p("Корневой элемент документа следует как-то обозначить в схеме (например, пусть это будет самый первый элемент по порядку объявления)."),
					p("Когда будет сформирован корневой элемент (в конце работы его конструктора), запускается валидация документа в целом (документ определяется по его корневому элементу).")
				),
				Advantage("Красивое решение, не требующее усложнения синтаксиса.")
			)
		)
	),
	Problem("Формирование 'чистой' версии документа",
		Description(
			p("Иногда требуется получить структуру данных, свободную от служебных полей. Какой вид этой структуры будет более удобен?"),
			p("Следует учитывать, что структура документов JFx изначально разрабатывается подобной структуре XML-документов (разделение данных на атрибуты и вложенные элементы).")
		),
		Solution("JSON",
			Disadvantage("Классический JSON не совсем удобен для представления XML-подобных данных, т.к. в XML есть четкое разделение данных на атрибуты и вложенные элементы, что затруднительно отобразить в структуре JSON.")
		),
		Solution("JXML",
			Advantage("Формат JXML специально предназначен для представления XML-документов средствами JavaScript.")
		),
		Solution("Копия исходного документа с удаленными служебными полями",
			Description("Получается, что элементом структуры является массив (Array), для которого прописаны дополнительные атрибуты."),
			Disadvantage("Такую структуру трудно представить в виде единого выражения. Сначала придется создавать для каждого элемента массив, а потом присваивать ему атрибуты.")
		)
	),
	Problem("Преобразования документа",
		Description(
			p("Необходимо разработать механизм преобразования документа на основе шаблонов (подобно XSLT)."),
			p("Целью преобразования может быть, например, визуализация документа (например, представление в формате HTML), или формирование выборки данных в произвольном формате.")
		),
		Solution("Набор шаблонов в виде объекта. Метод transform().",
			Description("Представлять набор шаблонов в виде объекта, имеющего метод transform(), осуществляющий заданное преобразование."),
			Advantage("Очень похоже на XSLT.")
		),
		Solution("Обобщенная обработка документа. Метод process().",
			Description(
				p("Целью обработки документа может быть не только его преобразование, но также и просто исполнение каких-то действий, определяемых его структурой."),
				p("В таком случае, логично использовать объект, включающий набор шаблонов, и метод process(), выполняющий над контекстным элементом какие-то действия, и возвращающий, при необходимости, что-нибудь.")
			),
			Advantage("Существенно расширяет сферу применения технологии.")
		)
	),
	Problem("Язык запросов",
		Description(
			p("Требуется реализовать язык запросов к формируемой структуре данных."),
			p("Язык должен быть подобен языку XPath, но по возможности с расширяемой функциональностью.")
		),
		Solution("Пошаговый обход структуры",
			Description(
				p("Основным элементом запроса является шаг (как в XPath)."),
				p("Шаги перечисляются в виде массива, либо в сокращенном виде в единой строке с разделителями '/'."),
				p("Представление в виде массива позволяет реализовать отдельные шаги в виде функций, возвращающих соответствующие наборы элементов.")
			),
			Advantage("Просто"),
			Advantage("Гибко"),
			Advantage("Красиво")
		)
	)
);
}
</script>
</head>
<body/>
</html>
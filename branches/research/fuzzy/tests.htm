<html>
<head>
<title>Fuzzy Unit Tests</title>
<script type="text/javascript" src="../tools/jsUnit.js"></script>
<script type="text/javascript" src="fuzzy.js"></script>
<script type="text/javascript">
new JSUnit.Test("Подключение модуля Fuzzy", "Configuration").run = function(){
	this.assert(typeof(Fuzzy), "object");
}

new JSUnit.Test("And Test", "Operations").run = function(){
	this.assert(Fuzzy.and(0.4, 0.2), 0.2);
	this.assert(Fuzzy.and(true, 0.2), 0.2);
	this.assert(Fuzzy.and(0.4, false), 0);
}

new JSUnit.Test("Or Test", "Operations").run = function(){
	this.assert(Fuzzy.or(0.4, 0.2), 0.4);
	this.assert(Fuzzy.or(true, 0.2), 1);
	this.assert(Fuzzy.or(0.4, false), 0.4);
}

new JSUnit.Test("Not Test", "Operations").run = function(){
	this.assert(Fuzzy.not(0.4), 0.6);
	this.assert(Fuzzy.not(false), 1);
	this.assert(Fuzzy.not(true), 0);
	this.assert(Fuzzy.not(0.1), 0.9);
}

new JSUnit.Test("Fuzzy values", "Operations").run = function(){
	this.assert(Fuzzy.truth(true), 1);
	this.assert(Fuzzy.truth(false), 0);
	this.assert(Fuzzy.truth("0.2"), 0.2);
	this.assert(Fuzzy.truth(0.2), 0.2);
}


new JSUnit.Test("test 1", "Functions").run = function(){
	var Velocity = {
		isLow: Fuzzy.functions.Z(5, 7),
		isHeigh: Fuzzy.functions.S(5, 7)
	};
	
	this.assert(Velocity.isLow(2), 1, "error 1.1");
	this.assert(Velocity.isLow(6), 0.5, "error 1.2");
	this.assert(Velocity.isLow(7), 0, "error 1.3");
	this.assert(Velocity.isLow(5), 1, "error 1.4");
	this.assert(Velocity.isLow(6.5), 0.25, "error 1.5");
	
	this.assert(Velocity.isHeigh(2), 0, "error 2.1");
	this.assert(Velocity.isHeigh(6), 0.5, "error 2.2");
	this.assert(Velocity.isHeigh(7), 1, "error 2.3");
	this.assert(Velocity.isHeigh(5), 0, "error 2.4");
	this.assert(Velocity.isHeigh(6.5), 0.75, "error 2.5");
}

new JSUnit.Test("test 2", "Functions").run = function(){
	var Velocity = {
		isLow: Fuzzy.functions.Z(0, 6),
		isHeigh: Fuzzy.functions.S(0, 6)
	};
	
	this.assert(Velocity.isLow(-1), 1, "error 1.1");
	this.assert(Velocity.isLow(3), 0.5, "error 1.2");
	this.assert(Velocity.isLow(6), 0, "error 1.3");
	this.assert(Velocity.isLow(0), 1, "error 1.4");
	this.assert(Velocity.isLow(4.5), 0.25, "error 1.5");
	
	this.assert(Velocity.isHeigh(-2), 0, "error 2.1");
	this.assert(Velocity.isHeigh(3), 0.5, "error 2.2");
	this.assert(Velocity.isHeigh(6), 1, "error 2.3");
	this.assert(Velocity.isHeigh(0), 0, "error 2.4");
	this.assert(Velocity.isHeigh(4.5), 0.75, "error 2.5");
}


new JSUnit.Test("test L", "Functions").run = function(){
	var isOptimal = Fuzzy.functions.L(3, 2, 2);
	
	this.assert(isOptimal(0), 0, "error 1.1");
	this.assert(isOptimal(7), 0, "error 1.2");
	this.assert(isOptimal(3), 1), "error 1.3";
	this.assert(isOptimal(2), 0.5, "error 1.4");
	this.assert(isOptimal(4), 0.5, "error 1.5");
	
}

new JSUnit.Test("test P", "Functions").run = function(){
	var isOptimal = Fuzzy.functions.P(3, 5, 2, 2);
	
	this.assert(isOptimal(0), 0, "error 1.1");
	this.assert(isOptimal(9), 0, "error 1.2");
	this.assert(isOptimal(3), 1), "error 1.3a";
	this.assert(isOptimal(4), 1), "error 1.3b";
	this.assert(isOptimal(5), 1), "error 1.3c";
	this.assert(isOptimal(2), 0.5, "error 1.4");
	this.assert(isOptimal(6), 0.5, "error 1.5");
	
}

new JSUnit.Test("Fuzzy values", "Functions").run = function(){
	var Temperature = {
		isCool: Fuzzy.functions.Z(0, 10),
		isHot: Fuzzy.functions.S(0, 10)
	};
	
	this.assert(Temperature.isCool(-2), 1, "cool 1");
	this.assert(Temperature.isCool(11), 0, "cool 2");
	this.assert(Temperature.isCool(5), 0.5, "cool 3");
	this.assert(Temperature.isCool(9), 0.1, "cool 4");
	this.assert(Temperature.isCool(1), 0.9, "cool 5");
	
	this.assert(Temperature.isHot(-2), 0, "hot 1");
	this.assert(Temperature.isHot(11), 1, "hot 2");
	this.assert(Temperature.isHot(5), 0.5, "hot 3");
	this.assert(Temperature.isHot(9), 0.9, "hot 4");
	this.assert(Temperature.isHot(1), 0.1, "hot 5");
	
	var Velocity = {
		isLow: Fuzzy.functions.Z(5, 10),
		isHeigh: Fuzzy.functions.S(5, 10)
	};
	
	function thisIsAFrog(t, v){ // Frog is cool and quick
		return Fuzzy.and(
			Temperature.isCool(t), 
			Velocity.isHeigh(v)
		);
	}
	
	function thisIsAnOldMan(t, v){
		return Fuzzy.and(
			Temperature.isHot(t),
			Velocity.isLow(v)
		);
	}
	
	this.assert(thisIsAFrog(3, 8), 0.6, "sample 1.1");
	this.assert(thisIsAnOldMan(3, 8), 0.3, "sample 1.2");
	
	this.assert(thisIsAFrog(36, 2), 0, "sample 2.1");
	this.assert(thisIsAnOldMan(36, 2), 1, "sample 2.2");
}


new JSUnit.Test("Fuzzy values", "Defuzzyfication").run = function(){
	var F = Fuzzy.functions.P(3,5,2,2);
	
	this.assert(Math.floor(Fuzzy.defuzzy(1, 7, F)*100)/100, 4);
}

function init(){
	document.getElementById("versionPanel").innerHTML = Fuzzy.version;
	JSUnit.init();
}
</script>
</head>
<body onload="init()">
	<h1>Fuzzy Unit Tests</h1>
	<p>Fuzzy v.<span id="versionPanel"></span></p>
	<div id="testContainer" style="display:none;"></div>
	<div id="out"></div>
</body>
</html>
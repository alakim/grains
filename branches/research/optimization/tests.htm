<html>
<head>
<title>Opt Unit Tests</title>
<script type="text/javascript" src="../tools/jsUnit.js"></script>
<script type="text/javascript" src="opt.js"></script>
<script type="text/javascript">
new JSUnit.Test("Подключение модуля Opt", "Configuration").run = function(){
	this.assert(typeof(Opt), "object");
}

new JSUnit.Test("Парабола 1", "Scalar optimization").run = function(){
	function F(x){
		x-=1;
		return x*x;
	}
	var eps = 0.0001;
	var dx0 = 0.05;
	var res = Opt.findMin(F, 0, dx0, eps);
	var expectedMin = 1;
	this.assert(res.min>(expectedMin-eps*100) && res.min<(expectedMin+eps*100), true, "res.min = "+res.min);
	this.assert(res.steps<Opt.maxIterations, true, "Превышен лимит итераций: "+res.steps);
}

new JSUnit.Test("Парабола 2", "Scalar optimization").run = function(){
	function F(x){
		x+=4;
		return x*x * 0.3;
	}
	var eps = 0.0001;
	var dx0 = 1;
	var res = Opt.findMin(F, 0, dx0, eps);
	var expectedMin = -4;
	this.assert(res.min>(expectedMin-eps*100) && res.min<(expectedMin+eps*100), true, "res.min = "+res.min);
	this.assert(res.steps<Opt.maxIterations, true, "Превышен лимит итераций: "+res.steps);
}

new JSUnit.Test("Параболоид 1", "Vector optimization").run = function(){
	function F(v){
		var x = v[0];
		var y = v[1];
		return x*x + y*y;
	}
	
	var eps = 0.0001;
	var dv0 = [0.5, 0.5];
	var res = Opt.findMin(F, new Opt.vectorIterator([1, 1], dv0, eps));
	var expectedMin = [0, 0];
	this.assert(res.min[0]>(expectedMin[0]-eps*100) && res.min[0]<(expectedMin[0]+eps*100), true, "res.min = "+res.min);
	this.assert(res.min[1]>(expectedMin[1]-eps*100) && res.min[1]<(expectedMin[1]+eps*100), true, "res.min = "+res.min);
	this.assert(res.steps<Opt.maxIterations, true, "Превышен лимит итераций: "+res.steps);
}

new JSUnit.Test("Параболоид 2", "Vector optimization", true).run = function(){
	function F(v){
		var x = v[0]+0;
		var y = v[1]-0;
		return 1*x*x + 1*y*y;
	}
	
	var eps = 0.0001;
	var dv0 = [0.1, 0.1];
	var res = Opt.findMin(F, new Opt.vectorIterator([1, 1], dv0, eps));
	var expectedMin = [-4, 2];
	//alert(displayObject(res));
	this.assert(res.min[0]>(expectedMin[0]-dv0[0]) && res.min[0]<(expectedMin[0]+dv0[0]), true, "res.min = "+res.min);
	this.assert(res.min[1]>(expectedMin[1]-dv0[1]) && res.min[1]<(expectedMin[1]+dv0[1]), true, "res.min = "+res.min);
	this.assert(res.steps<Opt.maxIterations, true, "Превышен лимит итераций: "+res.steps);
}


function displayObject(o, sep){
	if(o.constructor==Array)
		return "["+o.join(", ")+"]";
	if(typeof(o)=="object"){
		sep = sep?sep:"\n";
		var s = [];
		for(var k in o)
			s.push(k+": "+displayObject(o[k]));
		return s.join(sep);
	}
	return o.toString();
}

function init(){
	document.getElementById("versionPanel").innerHTML = Opt.version;
	JSUnit.init();
}
</script>
</head>
<body onload="init()">
	<h1>Opt Unit Tests</h1>
	<p>Методы численной оптимизации.</p>
	<p>Opt v.<span id="versionPanel"></span></p>
	<div id="testContainer" style="display:none;"></div>
	<div id="out"></div>
</body>
</html>
<html>
<head>
<style type="text/css">
.green{
	color:#008800;
}
</style>

<script type="text/javascript" src="html.js"></script>

<script type="text/javascript">
// Пример простой верстки
function simpleTable(){
	with(Html){
		document.getElementById("out").innerHTML = div(
			h2("Пример простой таблицы"),
			table({border:1, cellpadding:3, cellspacing:0},
				tr(
					td(11),
					td(12)
				),
				tr(
					td(21),
					td(22)
				)
			),
			h2("Таблица с заголовками"),
			table({border:1, cellpadding:3, cellspacing:0},
				tr(th("ФИО"), th("телефон")),
				tr(td("Иванов И.И"), td("444-4444")),
				tr(td("Петров П.П."), td("444-3333")),
				tr(td("Сидоров С.С."), td("444-2222"))
			)
		)
	}
}

// Простой пример разметки текста
function simpleMarkup(){with(Html){
	// Можно заранее определить некоторые стили
	var redStyle = {style:"color:red;"};
	var boldStyle = {style:"font-weight:bold;"};
	
	document.getElementById("out").innerHTML = div(
		p(
			span(redStyle, "abc"),
			span("def"),
			span(boldStyle, "ghi"),
			span({style:"font-style:italic;"}, "jkl"),
			" ",
			span({"class":"green"}, "mno") //имя атрибута class указываем в кавычках, т.к. это зарезервированное слово в javascript
		),
		p("Такая вот она, ", span(boldStyle, "разметка"), "...")
	);
}}


// Простой пример разметки обработчиков
function actions(){with(Html){
	var name = "ОАО \"Персей\"";
	var html = div(
		span({
			style:"cursor:hand;cursor:pointer; text-decoration:underline;",
			//onclick:callFunction("alert", name)
			onclick:"alert('ОАО \\\\\"Персей\\\\\"')"
		}, name)
	)
	console.log(json(html));
	document.getElementById("out").innerHTML = html;
}}

// Отображение набора данных с использованием шаблона
function usingTemplates(){with(Html){
	// Набор данных (данные в массиве)
	var phoneBook = [
		{name:"Иванов И.И.", phone:"444-4444"},
		{name:"Петров П.П.", phone:"444-3333"},
		{name:"Сидоров С.С.", phone:"444-2222"},
		{name:"Иваненко И.И.", phone:"333-4444"},
		{name:"Петренко П.П.", phone:"333-3333"},
		{name:"Сидоренко С.С.", phone:"333-2222"}
	];
	
	var headerStyle = {style:"background-color:#444444; font-weight:bold; color:#ffffff; font-family:Arial, Sans-Serif;"};
	
	document.getElementById("out").innerHTML = div(
		table({border:0, cellpadding:3, cellspacing:0, style:"border:1px solid #888888;"},
			tr(headerStyle, th("ФИО"), th("телефон")),
			// Применяем шаблон для элементов набора данных
			apply(phoneBook, function(row, i){
				return tr(
					i%2?{style:"background-color:#eeeeee;"}:null,
					td(row.name),
					td(row.phone)
				);
			})
		)
	);
}}

// Тоже пример на основе шаблона, но данные заданы в виде словаря
function usingTemplates2(){with(Html){
	// Набор данных (данные в словаре)
	var phoneBook = {
		"Иванов И.И.":"444-4444",
		"Петров П.П.":"444-3333",
		"Сидоров С.С.":"444-2222",
		"Иваненко И.И.":"333-4444",
		"Петренко П.П.":"333-3333",
		"Сидоренко С.С.":"333-2222"
	};
	
	var headerStyle = {style:"background-color:#888888; font-weight:bold; color:#000000; font-family:Arial, Sans-Serif;"};
	
	var i = 0;
	document.getElementById("out").innerHTML = div(
		table({border:0, cellpadding:3, cellspacing:0, style:"border:1px solid #888888;"},
			tr(headerStyle, th("ФИО"), th("телефон")),
			// Применяем шаблон для элементов набора данных
			apply(phoneBook, function(phone, name){
				return tr(
					(i++)%2?{style:"background-color:#eeeeee;"}:null,
					td(name),
					td(phone)
				);
			})
		)
	);
}}

// Преобразование на основе набора шаблонов (напоминает XSLT)
function quasiXslt(){
	// Исходный документ в формате JSON
	var srcDocument = {title:"Небольшая статья", content:[
		["p", "небольшой эпиграф"],
		["section", {title:"Раздел 1"}, [
			["p", "Немного вводных слов."],
			["p", "О решаемых задачах"],
			["p", "Краткое описание методологии"]
		]],
		["section", {title:"Раздел 2"}, [
			["section", {title:"Подраздел 2.1"}, [
				["p", "Небольшой абзац"]
			]],
			["section", {title:"Подраздел 2.1"}, [
				["p", "Небольшой абзац"]
			]]
		]]
	]};
	
	with(Html){
		// выбирает шаблон в зависимости от имени элемента
		function applyTemplates(collection){
			return Html.apply(collection, function(el){
				return templates[el[0]](el);
			});
		}
		
		// набор используемых шаблонов
		var templates = {
			p: function(elem){
				return p(elem[1]);
			},
			
			section: function(elem){
				return div(
					h2(elem[1].title),
					applyTemplates(elem[2])
				);
			}
		};
		
		document.getElementById("out").innerHTML = div(
			h1(srcDocument.title),
			applyTemplates(srcDocument.content)
		);
	}
}
</script>
</head>
<body>
	<h1>Демонстрация возможностей модуля Html</h1>
	<p>
		<a href="#" onclick="simpleTable()">Простая верстка</a> |
		<a href="#" onclick="actions()">Обработчики событий</a> |
		<a href="#" onclick="simpleMarkup()">Простая разметка</a> |
		<a href="#" onclick="usingTemplates()">Использование шаблонов (данные в массиве)</a> |
		<a href="#" onclick="usingTemplates2()">Использование шаблонов (данные в словаре)</a> |
		<a href="#" onclick="quasiXslt()">квази-XSLT</a>
	</p>
	
	<div id="out"></div>
</body>
</html>